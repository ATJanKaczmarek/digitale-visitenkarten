// 1. Deine Farbpaletten (Syntax für die Keys korrigiert)
// Die Keys in einer Map sind Strings, keine Variablen.
$color-schemes: (
  default: (
    "background-color": #f1f0e4,
    "primary-color": #3e3f29,
    "font-color": #ced28c,
    "font-color-secondary": #adb076,
  ),
  tom: (
    "background-color": #ed8f90,
    "primary-color": #a4161a,
    "font-color": #ffffff,
    "font-color-secondary": #f5f3f4,
  ),
  sabine: (
    "background-color": #cbe6ed,
    "primary-color": #72a2ac,
    "font-color": #fff7f8,
    "font-color-secondary": #f4e8e1,
  ),
);

// 2. Ein Mixin, das alle farbabhängigen Stile enthält
// Es nimmt eine Farbpalette entgegen und wendet sie an.
@mixin apply-color-scheme($palette) {
  // Farben aus der übergebenen Palette extrahieren
  $bg-color: map-get($palette, "background-color");
  $primary-color: map-get($palette, "primary-color");
  $font-color: map-get($palette, "font-color");
  $font-color-secondary: map-get($palette, "font-color-secondary");

  // Farbige Stile anwenden
  background-color: $bg-color;

  main {
    background-color: $primary-color;
    h1 {
      color: $font-color;
    }
    p,
    h2,
    h3,
    li,
    a {
      color: $font-color-secondary;
    }
  }

  footer {
    * {
      color: $primary-color;
    }
  }

  img {
    border-color: $bg-color;
  }

  // Farbige Stile innerhalb von Media Queries
  @media (min-width: 768px) {
    footer {
      border-left: 4px solid $primary-color;
    }
  }
}

// 3. Generiere die CSS-Klassen für jedes Schema automatisch
// Diese Schleife geht durch deine Map und wendet das Mixin für jedes Schema an.
@each $scheme-name, $palette in $color-schemes {
  body.#{$scheme-name} {
    @include apply-color-scheme($palette);
  }
}

// ----------------------------------------------------
// -- DEINE FARB-UNA-BHÄNGIGEN STILE (BLEIBEN GLEICH) --
// ----------------------------------------------------

// Font Mixins
@mixin poppins-light {
  font-family: "Poppins", sans-serif;
  font-weight: 300;
  font-style: normal;
}

@mixin poppins-regular {
  font-family: "Poppins", sans-serif;
  font-weight: 400;
  font-style: normal;
}

@mixin poppins-semibold {
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  font-style: normal;
}

// Globale Stile & Typografie
*,
html,
body {
  padding: 0;
  margin: 0;
}

li,
p {
  @include poppins-regular;
  line-height: 1.75rem;
  font-size: 1rem;
}

h1 {
  @include poppins-semibold;
  line-height: 3rem;
  font-size: 2rem;
}

h2 {
  @include poppins-semibold;
  line-height: 1.75rem;
  font-size: 1.5rem;
}

h3 {
  @include poppins-semibold;
  font-size: 1.5rem;
}

// Layout-Stile
body {
  footer {
    padding: 1rem 0 2rem 0;
    margin: 0 0 0 auto;
    * {
      text-align: center;
    }
  }
  main {
    padding: 0 3rem 3rem 3rem;

    ul {
      li {
        margin-left: 1rem;
      }
      list-style: outside;
      ::marker {
        content: "- ";
      }
      padding: 0;
      margin: 0;
      margin-bottom: 2rem;
    }
  }

  footer {
    box-sizing: border-box;
  }
}

img {
  max-width: clamp(160px, 30vw, 300px);
  aspect-ratio: 1/1;
  border-radius: 50%;
  object-fit: cover;
  border: 5px solid; // Die Farbe wird jetzt durch das Mixin gesetzt
  box-shadow: 3px 3px 12px rgba(0, 0, 0, 0.1);
}

/* Mobile styles (320px breakpoint) */
@media (max-width: 768px) {
  body {
    padding-top: 3rem;
  }
  main {
    margin-top: 80px;
    min-height: calc(100vh - 80px - 6rem);
    img {
      position: relative;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      margin-bottom: -4rem;
    }

    .texts {
      h1,
      h2,
      h3 {
        text-align: center;
      }
      h1 {
        margin-bottom: 2rem;
      }
      h2,
      h3 {
        margin-bottom: 0.75rem;
      }
      p {
        text-align: justify;
        margin-bottom: 0.75rem;
      }
    }
  }
}

/* Tablet styles (768px breakpoint) */
@media (min-width: 768px) and (max-width: 1200px) {
  body {
    padding: 0 0 0 0;
    footer {
      width: 80%;
      padding: 1rem 0 1rem 2rem;
      margin: 0 0 0 auto;
      // Der Border wird jetzt durch das Mixin gesetzt
      * {
        text-align: left;
      }
    }
    main {
      width: 80%;
      min-height: calc(100vh - 5rem);
      padding: 3rem 0 2rem 0;
      margin: 0 0 0 auto;
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 0;

      img {
        grid-column: 1/2;
        position: relative;
        top: 0;
        left: 0;
        transform: translateX(-50%);
      }

      .texts {
        grid-column: 2/3;
        padding-top: calc(80px - 1.5rem);
        padding-right: 3rem;
        h1,
        h2,
        h3 {
          text-align: left;
        }
        h1 {
          margin-bottom: 2rem;
        }
        h2,
        h3 {
          margin-bottom: 0.75rem;
        }
        p {
          text-align: left;
          margin-bottom: 0.75rem;
        }
      }
    }
  }
}

/* Desktop styles (1024px breakpoint) */
@media (min-width: 1200px) {
  body {
    padding: 0;
    footer {
      width: 80%;
      padding: 1rem 0 1rem 2rem;
      margin: 0 0 0 auto;
      // Der Border wird jetzt durch das Mixin gesetzt
      * {
        text-align: left;
      }
    }
    main {
      width: 80%;
      padding: 3rem 0 2rem 0;
      margin: 0 0 0 auto;
      min-height: calc(100vh - 3rem);
      display: grid;
      grid-template-columns: auto 1fr;
      align-items: flex-start;
      gap: 0;

      img {
        grid-column: 1/2;
        grid-row: 1/2;
        position: relative;
        top: 0;
        left: 0;
        transform: translateX(-50%);
      }

      .texts {
        grid-column: 2/3;
        max-width: 1500px;
        display: grid;
        grid-template-columns: 2fr 3fr;
        gap: 0 3rem;
        padding-top: calc(80px - 1.5rem);
        padding-right: max(3rem, 3vw);
        h1,
        h2,
        h3 {
          text-align: left;
        }
        h1 {
          margin-bottom: 2rem;
          grid-column: 1/3;
          grid-row: 1/2;
        }
        h2,
        h3 {
          margin-bottom: 0.75rem;
        }
        p {
          text-align: left;
          margin-bottom: 0.75rem;
        }
        section {
          max-width: min(40ch, 1fr);
        }
      }
    }
  }
}
